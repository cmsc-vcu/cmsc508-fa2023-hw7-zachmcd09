---
title: Homework 7 - Creating a resume database
author: (your name goes here!)
date: last-modified
format:
    html:
        theme: cosmo
        toc: true
        embed-resources: true
        code-copy: true
---
## Summary:
- This project involves the creation of a database to capture the collective skills, certifications, and roles of employees in our company. The database is structured into five primary tables: `skills`, `people`, `peopleskills`, `roles`, and `people_roles`. Each table serves a specific function, from storing employee information to detailing their skills and roles within the company. This database will assist in identifying skill gaps, employee qualifications, and role assignments.


(include a brief description of what is in this document)


GITHUB URL:  <your URL goes here!>

```{python}
#| eval: true
#| echo: false
import os
import sys
import pandas as pd
from tabulate import tabulate
from dotenv import load_dotenv
from sqlalchemy import create_engine, text
from sqlalchemy.exc import OperationalError, ProgrammingError
from IPython.display import display, Markdown
```
```{python}
#| eval: true
#| echo: false
load_dotenv()
# modify config_map to reflect credentials needed by this program
config = {
    'user': os.getenv("CMSC508_USER"),
    'password': os.getenv("CMSC508_PASSWORD"),
    'host': os.getenv("CMSC508_HOST"),
    'database': os.getenv("HW7_DB_NAME"),
}
# load and store credentials
for key in config.keys():
    flag = False
    if config[key] is None:
        flag = True
        print(f"Missing {config[key]} in .env file")
#if flag:
#    sys.exit(1)
```
```{python}
#| eval: true
#| echo: false

# build a sqlalchemy engine string
engine_uri = f"mysql+pymysql://{config['user']}:{config['password']}@{config['host']}/{config['database']}"

# create a database connection.  THIS IS THE ACTUAL CONNECTION!
try:
    cnx = create_engine(engine_uri)
except ArgumentError as e:
    print(f"create_engine: Argument Error: {e}")
    #sys.exit(1)
except NoSuchModuleError as e:
    print(f"create_engine: No Such Module Error: {e}")
    #sys.exit(1)
except Exception as e:
    print(f"create_engine: An error occurred: {e}")
    #sys.exit(1)
```
```{python}
#| echo: false
#| eval: true

# Do a quick test of the connection and trap the errors better!
try:
    databases = pd.read_sql("show databases",cnx)
except ImportError as e:
    print(f"Error: {e}")
except OperationalError as e:
    print(f"Database/SQL Error:\n{str(e)}\n")
except ProgrammingError as e:
    print(f"Programming Error:\n{str(e)}\n")
except Exception as e:
    print(f"An error occurred:\n{str(e)}\n")

```

## Overview and description

This project involves the creation of a database to capture the collective skills, certifications, and roles of employees in our company. The database is structured into five primary tables: `skills`, `people`, `peopleskills`, `roles`, and `people_roles`. Each table serves a specific function, from storing employee information to detailing their skills and roles within the company. This database will assist in identifying skill gaps, employee qualifications, and role assignments.

## Crows-foot diagram

Below is the Crows-Foot Entity-Relationship Diagram (ERD) representing our database. This diagram illustrates how each table is interlinked, showcasing the relationships between employees, their skills, and their roles within the company.

```{mermaid}
erDiagram
    PEOPLE }|--o{ PEOPLESKILLS : "may_have"
    SKILLS }|--o{ PEOPLESKILLS : "required_for"
    PEOPLE }|--o{ PEOPLE_ROLES : "resposible_for"
    ROLES }|--o{ PEOPLE_ROLES : "assigned_to"

    PEOPLE {
        id
        first_name
        last_name
        email
        linkedin_url
        headshot_url
        discord_handle
        brief_bio
        date_joined
    }
    SKILLS {
        id
        name
        description
        tag
        url
        time_commitment
    }
    PEOPLESKILLS {
        id
        skills_id
        people_id
        date_acquired
        date_anticipated
    }
    ROLES {
        id
        name
        sort_priority
    }
    PEOPLE_ROLES {
        id
        people_id
        role_id
        date_role_acquired
    }
```


## Examples of data in the database

For the people, skills, and roles tables, provide a description of each table and it's contents. Then provide a listing of the entire table.

### People table

The *people* table contains elements that describe ... 
The `people` table contains detailed information about each employee, including their name, contact details, professional links, and the date they joined the company. It serves as a central repository for employee data.

Below is a list of data in the *people* table.

```{python}
#| echo: false
#| eval: true
sql = f"""
select * from people;
"""
## Add code to list roles table here
try:
    df = pd.read_sql(sql,cnx)
    df
except Exception as e:
    message = str(e)
    print(f"An error occurred:\n\n{message}\n\nIgnoring and moving on.")
    df = pd.DataFrame()
df
```

### Skills table

The *skills* table contains elements that describe ... 
The `skills` table catalogues various skills and certifications available or acquired within our company. Each skill is described along with its learning commitment and a URL for more information.


Below is a list of data in the *skills* table.

```{python}
#| echo: false
#| eval: true

## Add code to list roles table here
```

### Roles table

The *roles* table contains elements that describe ... 

Below is a list of data in the *roles* table.

```{python}
#| echo: false
#| eval: true

## Add code to list roles table here
```


## Sample queries

Let's explore the database!

# List skill names, tags, and descriptions ordered by name

(here a sample query)

```{python}
sql = f"""
select * from people
"""
```


(and here is a sample result from the query)

```{python}
#| echo: false
#| eval: true
try:
    df = pd.read_sql(sql,cnx)
    df
except Exception as e:
    message = str(e)
    print(f"An error occurred:\n\n{message}\n\nIgnoring and moving on.")
    df = pd.DataFrame()
df

```


### List people names and email addresses ordered by last_name


### List skill names of Person 1


### List people names with Skill 6


### List people with a DEVELOPER role


### List names and email addresses of people without skills


### List names and tags of unused skills


### List people names and skill names with the BOSS role


### List ids and names of unused roles


## Reflection

(Write a paragraph expressing your thoughts, feelings, and insights about your experience with this assignment.  Pause and breath before writing - I'm trying to encourage critical thinking and self-awareness while allowing you to explore the connections between theory and practice. And yes, delete this paragraph.)

